@model Pizzeria.Models.User

@{
    ViewBag.Title = "SignUp";
}

<h2 class="mt-3">SignUp</h2>

<div class="mt-3">
    @using (Html.BeginForm("SignUp", "Auth", new { Area = "" }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        if (TempData["ErrorSignUp"] != null)
        {
            <div class="alert alert-danger">
                Lo username scelto e gia in uso
            </div>
        }

        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Username, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Username") ? "" : "is-invalid")}" } })
                @Html.ValidationMessageFor(model => model.Username, null, new { htmlAttributes = new { @class = "invalid-feedback mb" }, style = "color:red;" })
            </div>
        </div>
        <div class="row row-cols-1 mb-3">
            <div class="col">
                @Html.LabelFor(model => model.Password, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Password") ? "" : "is-invalid")}" } })
                @Html.ValidationMessageFor(model => model.Password, null, new { htmlAttributes = new { @class = "invalid-feedback mb" }, style = "color:red;" })
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                <button type="submit" class="btn btn-success">Registrati</button>
            </div>
        </div>
    }
</div>